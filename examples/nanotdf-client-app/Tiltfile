# Tiltfile for development
# https://docs.tilt.dev/api.html
#

# helm
k8s_yaml(helm("../../quickstart/helm/opentdf", "opentdf"))

# resource dependencies
k8s_resource("opentdf-abacus", links = link("http://localhost:65432"))
k8s_resource("opentdf-attributes", resource_deps = ["opentdf-postgresql"], links = link("http://localhost:65432/attributes/docs"))
k8s_resource("opentdf-entitlement", resource_deps = ["opentdf-postgresql"], links = link("http://localhost:65432/entitlement/docs"))
k8s_resource("opentdf-claims", resource_deps = ["opentdf-postgresql"], links = link("http://localhost:65432/claims/docs"))
k8s_resource("opentdf-keycloak", resource_deps = ["opentdf-postgresql"], port_forwards = "8443:443", links = link("http://localhost:65432/keycloak/auth/"))
k8s_resource("opentdf-bootstrap", resource_deps = ["opentdf-keycloak"])
k8s_resource("opentdf-key-access", resource_deps = ["opentdf-attributes"], links = link("http://localhost:65432/kas/ui/"))

# port forward
k8s_resource("opentdf-ingress-nginx-controller", port_forwards = "65432:80")

# sample web app
k8s_yaml("kubernetes.yaml")

docker_build(
'opentdf/nanotdf-client-app-image',
 '.',
  live_update=[
    # when package.json changes, we need to do a full build
    fall_back_on(['package.json', 'package-lock.json']),
    # Map the local source code into the container under /src
    sync('.', '/src'),
  ])
k8s_resource(
'nanotdf-client-app',
 links=link('http://localhost:65432/nanotdf-client-app'),
 resource_deps = ["opentdf-keycloak", "opentdf-key-access"]
)
